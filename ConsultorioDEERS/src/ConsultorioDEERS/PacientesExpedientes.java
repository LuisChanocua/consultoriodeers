/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ConsultorioDEERS;

/**
 *
 * @author luise
 */
import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
//import javax.swing.*;
import javax.swing.table.DefaultTableModel;

public class PacientesExpedientes extends javax.swing.JFrame {

    Consultas consultas = new Consultas();

    /**
     * Creates new form PacientesExpedientes
     */
    public PacientesExpedientes() throws SQLException {
        initComponents();

        /*LLAMAMOS AL METODO QUE CARGARÁ LOS DATOS EN EL JTABLE*/
        cargarDatosPacientes();

        // Obtener el tamaño de la pantalla
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        int width = screenSize.width;
        int height = screenSize.height;

        // Configurar el tamaño y la posición del JFrame
        setSize(width / 2, height / 2); // establecer el tamaño a la mitad de la pantalla
        setLocationRelativeTo(null); // centrar en la pantalla
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setVisible(true);
        
        

    }

    /*ESTE METODO ES REUTILIZABLE PARA QUE CUANDO SE LLAME EN EL
    CONSTRUCTOR MUESTRE LOS PACIENTES, ESTE METODO PERMITE MOSTRAR TODOS LOS DATOS 
    PERSONALES DE LOS PACIENTES, MAS NO LOS FISICOS*/
    public void cargarDatosPacientes() throws SQLException {
        try {

            /*SE INSTANCIA UN OBJETO TIPO TABLE PARA QUE RECIBA LOS DATOS
            DE LA CONSULTA DE LOS PACIENTES QUE SE RETORNAR DEL MISMO TIPO DE DATO*/
            DefaultTableModel modelo = consultas.cargarDatosPacientes(jtb_pacientes);

            /*LO QUE SE RETORNO SE LE MANDA AL JTABLE DEL JFRAME*/
            jtb_pacientes.setModel(modelo);

            System.out.println("Mostrando Datos Pacientes");
        } catch (Exception e) {
            System.out.println(e);
            System.out.println("No se iniciaron correctamente los componentes");
        }

    }

    /*ESTE METODO BUSCARA EL PACIENTE
    QUE SE DESEA BUSCAR, SE ENCARGARÁ DE 
    MOSTRAR EL RESULTADO DE LA BUSQUEDA POR 
    EL FILTRO QUE LE DEMOS YA SEA, NOMBRE, APELLIDO, ID*/
    public void busquedaPaciente(String busqueda) {
        try {

            /*SE INSTANCIA UN OBJETO TIPO TABLE PARA QUE RECIBA LOS DATOS
            DE LA CONSULTA DE LOS PACIENTES QUE SE RETORNAR DEL MISMO TIPO DE DATO*/
            DefaultTableModel modelo = consultas.busquedaPaciente(busqueda, jtb_pacientes);

            /*LO QUE SE RETORNO SE LE MANDA AL JTABLE DEL JFRAME*/
            jtb_pacientes.setModel(modelo);

            System.out.println("Mostrando Datos Pacientes");

        } catch (Exception e) {
            System.out.println(e);
            System.out.println("No se iniciaron correctamente los componentes");
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jtb_pacientes = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txb_busquedapacientes = new javax.swing.JTextField();
        btn_actualizardatos = new javax.swing.JButton();
        btn_editarexppaciente = new javax.swing.JButton();
        btn_verexpediente = new javax.swing.JButton();
        lbl_idusuario = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAlwaysOnTop(true);
        setLocation(new java.awt.Point(0, 0));
        setName("PacientesExpedientes"); // NOI18N
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        jtb_pacientes.setBorder(new javax.swing.border.MatteBorder(null));
        jtb_pacientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Nombre", "Ap. Paterno", "Ap. Materno", "Sexo", "Edad"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtb_pacientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtb_pacientesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtb_pacientes);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("Pacientes");
        jLabel1.setName("jtb_pacientes"); // NOI18N

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setText("Buscar Paciente");
        jLabel2.setName("lbl_buscarpaciente"); // NOI18N

        txb_busquedapacientes.setName("txb_buscarpaciente"); // NOI18N
        txb_busquedapacientes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txb_busquedapacientesKeyReleased(evt);
            }
        });

        btn_actualizardatos.setText("Actualizar Datos");
        btn_actualizardatos.setName("btn_actualizardatos"); // NOI18N
        btn_actualizardatos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_actualizardatosActionPerformed(evt);
            }
        });

        btn_editarexppaciente.setText("Editar");
        btn_editarexppaciente.setEnabled(false);

        btn_verexpediente.setText("Ver expediente");
        btn_verexpediente.setEnabled(false);

        lbl_idusuario.setText("Id Usuario");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 725, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txb_busquedapacientes, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lbl_idusuario, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btn_actualizardatos)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn_editarexppaciente)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn_verexpediente))
                            .addComponent(jLabel1))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel1)
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txb_busquedapacientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_idusuario, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 86, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_actualizardatos)
                    .addComponent(btn_editarexppaciente)
                    .addComponent(btn_verexpediente))
                .addGap(16, 16, 16))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /*este evento del boton actualiza los datos de los pacientes en la tabla
    cargando a todos los paciente*/
    private void btn_actualizardatosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_actualizardatosActionPerformed
        try {
            cargarDatosPacientes();
        } catch (SQLException ex) {
            System.out.println(ex);
            System.out.println("No se pudo cargar los datos desde el btn actualizar");
            Logger.getLogger(PacientesExpedientes.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btn_actualizardatosActionPerformed

    /*este evento pertence al txb del filtro para que cuando
    se escriba automaticamente con el evento cargue los datos consultados
    desde la base de datos al table*/
    private void txb_busquedapacientesKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txb_busquedapacientesKeyReleased
        // TODO add your handling code here:

        //se obtiene el valor que tiene el txb del filtro
        String busqueda = txb_busquedapacientes.getText();

        //si lo obtenido no es nulo se hace la consulta en el bloque else
        if (busqueda.isEmpty()) {
            System.out.println("Blanco");
            try {

                //si es nulo, carga todo los datos
                cargarDatosPacientes();
            } catch (SQLException ex) {
                Logger.getLogger(PacientesExpedientes.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {
//            si no es nulo, hace la busqueda y lo muestra
            /*llamamos al metodo encargado de hacer
                la busqueda y cargar los datos*/
            System.out.println(busqueda);
            busquedaPaciente(busqueda);

        }
    }//GEN-LAST:event_txb_busquedapacientesKeyReleased

    /*Este metodo le permite al usuario que cuando le di click
    a una fila del jtable pueda obtener el id del usuario para que se
    habilite el botono para que se puedan editar los datos del paciente
    asi como ver la receta*/
    private void jtb_pacientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtb_pacientesMouseClicked
        // TODO add your handling code here:

        // Obtener la fila y columna seleccionadas
        int fila = jtb_pacientes.getSelectedRow();
//        int columna = jtb_pacientes.getSelectedColumn();

        // Obtener el valor de la celda seleccionada
        Object valor = jtb_pacientes.getValueAt(fila, 0).toString();

        // Utilizar el valor obtenido
        System.out.println("Fila: " + fila + ", Valor: " + valor);
        lbl_idusuario.setText((String) valor);

        /*si el valor del valor obtenido es diferente de nulo
        se abilitan los botones para editar y ver expedientes*/
        if (valor != "") {
            btn_editarexppaciente.setEnabled(true);
            btn_verexpediente.setEnabled(true);
        }

    }//GEN-LAST:event_jtb_pacientesMouseClicked

    /*Este evento hace que cuando se de click
    fuera del table se desabiliten los botones para editar 
    y ver expedientes*/
    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // TODO add your handling code here:
        btn_editarexppaciente.setEnabled(false);
        btn_verexpediente.setEnabled(false);
        lbl_idusuario.setText("Id Usuario");
    }//GEN-LAST:event_formMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        Object exjtb_pacientes = null;

        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PacientesExpedientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PacientesExpedientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PacientesExpedientes.class.getName()).log(java.util.logging.Level.SEVERE, null, exjtb_pacientes);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PacientesExpedientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new PacientesExpedientes().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(PacientesExpedientes.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton btn_actualizardatos;
    public javax.swing.JButton btn_editarexppaciente;
    public javax.swing.JButton btn_verexpediente;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JTable jtb_pacientes;
    private javax.swing.JLabel lbl_idusuario;
    public javax.swing.JTextField txb_busquedapacientes;
    // End of variables declaration//GEN-END:variables

}
